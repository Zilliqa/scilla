ZilGame contract implements the following game:

1. Two players, A and B submit hashes of some integer values without
   revealing the pre-images.

2. After the first player has submitted, the timer starts for the second
   one, so the submission can be only made within 5 (or so) blocks
   after the first one, to guarantee some fairness. The second
   submitted solution is rejected is he missed the deadline.

3. Each of the players can then try to claim their reward via the
   ClaimReward transition. The winner is determined based on how close
   the solution is to the puzzle (wee need distance on hashes).
   The players must submit their pre-images to claim the reward, and
   it must match. If the player who submitted second failed to submit,
   the winner is the first one automatically.
 
Question: what primitive should we have in the language to check the
current block number? Or should it be the previous block number? What
is reasonable here?

The language should provide access to the following blockchain parameters
BLOCKNUMBER Get the last mined block's number
BLOCKHASH   Get the hash of the last block 
TIMESTAMP   Get the last block's timestamp
