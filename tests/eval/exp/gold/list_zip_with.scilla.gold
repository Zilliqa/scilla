(ADTValue Cons((TypeVar 'A))((IntLit 3)(ADTValue Cons((TypeVar 'A))((IntLit 5)(ADTValue Cons((TypeVar 'A))((IntLit 7)(ADTValue Nil()()))))))),
{ [res2 -> (ADTValue Cons((TypeVar 'A))((IntLit 3)(ADTValue Cons((TypeVar 'A))((IntLit 5)(ADTValue Cons((TypeVar 'A))((IntLit 7)(ADTValue Nil()())))))))],
  [res1 -> (ADTValue Cons((TypeVar 'A))((IntLit 2)(ADTValue Cons((TypeVar 'A))((IntLit 4)(ADTValue Cons((TypeVar 'A))((IntLit 6)(ADTValue Cons((TypeVar 'A))((IntLit 8)(ADTValue Nil()())))))))))],
  [l3 -> (ADTValue Cons((PrimType Int))((IntLit 1)(ADTValue Cons((PrimType Int))((IntLit 2)(ADTValue Cons((PrimType Int))((IntLit 3)(ADTValue Cons((PrimType Int))((IntLit 4)(ADTValue Nil()())))))))))],
  [l2 -> (ADTValue Cons((PrimType Int))((IntLit 2)(ADTValue Cons((PrimType Int))((IntLit 3)(ADTValue Cons((PrimType Int))((IntLit 4)(ADTValue Nil()())))))))],
  [l1 -> (ADTValue Cons((PrimType Int))((IntLit 3)(ADTValue Cons((PrimType Int))((IntLit 4)(ADTValue Nil()())))))],
  [l0 -> (ADTValue Cons((PrimType Int))((IntLit 4)(ADTValue Nil()())))],
  [nil -> (ADTValue Nil()())],
  [four -> (IntLit 4)],
  [three -> (IntLit 3)],
  [two -> (IntLit 2)],
  [one -> (IntLit 1)],
  [f -> <closure>],
  [int_zip -> <closure>],
  [list_zip_with -> <type_closure>],
  [list_reverse -> <type_closure>],
  [list_tail -> <type_closure>],
  [list_head -> <type_closure>] }
