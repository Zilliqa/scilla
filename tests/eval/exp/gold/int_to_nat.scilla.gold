(ADTValue Zero()()),
{ [res4 -> (ADTValue True()())],
  [one_int_nat -> (ADTValue Succ()((ADTValue Zero()())))],
  [one_int_nat_opt -> (ADTValue Some((ADT Nat()))((ADTValue Succ()((ADTValue Zero()())))))],
  [res3 -> (ADTValue None((ADT Nat()))())],
  [one_int -> (IntLit 64 1)],
  [minus_one_int -> (IntLit 32 -1)],
  [res2 -> (ADTValue True()())],
  [res1 -> (ADTValue True()())],
  [three_nat2 -> (ADTValue Succ()((ADTValue Succ()((ADTValue Succ()((ADTValue Zero()())))))))],
  [two_nat2 -> (ADTValue Succ()((ADTValue Succ()((ADTValue Zero()())))))],
  [one_nat2 -> (ADTValue Succ()((ADTValue Zero()())))],
  [three_nat1 -> (ADTValue Succ()((ADTValue Succ()((ADTValue Succ()((ADTValue Zero()())))))))],
  [three_uint -> (UintLit 32 3)],
  [zero_nat2 -> (ADTValue Zero()())],
  [zero_nat1 -> (ADTValue Zero()())],
  [zero_uint -> (UintLit 32 0)],
  [int128_to_nat -> <closure>],
  [int64_to_nat -> <closure>],
  [int32_to_nat -> <closure>],
  [uint128_to_nat -> <closure>],
  [uint64_to_nat -> <closure>],
  [uint32_to_nat -> <closure>],
  [int_to_nat_helper -> <type_closure>],
  [nat_eq -> <closure>],
  [is_some_zero -> <closure>],
  [nat_prev -> <closure>] }
