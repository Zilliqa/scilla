(ADTValue True()()),
{ [res1 -> (ADTValue Cons((TypeVar 'A))((IntLit 1)(ADTValue Cons((TypeVar 'A))((IntLit 2)(ADTValue Cons((TypeVar 'A))((IntLit 3)(ADTValue Cons((TypeVar 'A))((IntLit 4)(ADTValue Nil((TypeVar 'A))())))))))))],
  [m3 -> (ADTValue Cons((PrimType Int))((IntLit 1)(ADTValue Cons((PrimType Int))((IntLit 2)(ADTValue Cons((PrimType Int))((IntLit 3)(ADTValue Cons((PrimType Int))((IntLit 4)(ADTValue Nil()())))))))))],
  [m2 -> (ADTValue Cons((PrimType Int))((IntLit 2)(ADTValue Cons((PrimType Int))((IntLit 3)(ADTValue Cons((PrimType Int))((IntLit 4)(ADTValue Nil()())))))))],
  [m1 -> (ADTValue Cons((PrimType Int))((IntLit 3)(ADTValue Cons((PrimType Int))((IntLit 4)(ADTValue Nil()())))))],
  [m0 -> (ADTValue Cons((PrimType Int))((IntLit 4)(ADTValue Nil()())))],
  [l3 -> (ADTValue Cons((PrimType Int))((IntLit 4)(ADTValue Cons((PrimType Int))((IntLit 3)(ADTValue Cons((PrimType Int))((IntLit 1)(ADTValue Cons((PrimType Int))((IntLit 2)(ADTValue Nil()())))))))))],
  [l2 -> (ADTValue Cons((PrimType Int))((IntLit 3)(ADTValue Cons((PrimType Int))((IntLit 1)(ADTValue Cons((PrimType Int))((IntLit 2)(ADTValue Nil()())))))))],
  [l1 -> (ADTValue Cons((PrimType Int))((IntLit 1)(ADTValue Cons((PrimType Int))((IntLit 2)(ADTValue Nil()())))))],
  [l0 -> (ADTValue Cons((PrimType Int))((IntLit 2)(ADTValue Nil()())))],
  [nil -> (ADTValue Nil()())],
  [four -> (IntLit 4)],
  [three -> (IntLit 3)],
  [two -> (IntLit 2)],
  [one -> (IntLit 1)],
  [zero -> (IntLit 0)],
  [int_sort -> <closure>],
  [flt -> <closure>],
  [int_sort_t -> <closure>],
  [list_sort -> <type_closure>],
  [list_int_eq -> <closure>],
  [int_eq -> <closure>],
  [list_int_eq_t -> <closure>],
  [list_eq -> <type_closure>],
  [list_eq_helper -> <type_closure>],
  [list_tail -> <type_closure>],
  [list_head -> <type_closure>] }
