(ADTValue Cons((TypeVar 'A))((IntLit 1)(ADTValue Cons((TypeVar 'A))((IntLit 2)(ADTValue Cons((TypeVar 'A))((IntLit 3)(ADTValue Cons((TypeVar 'A))((IntLit 4)(ADTValue Cons((TypeVar 'A))((IntLit 5)(ADTValue Cons((TypeVar 'A))((IntLit 6)(ADTValue Nil()()))))))))))))),
{ [ll2 -> (ADTValue Cons((ADT List((PrimType Int))))((ADTValue Cons((PrimType Int))((IntLit 1)(ADTValue Cons((PrimType Int))((IntLit 2)(ADTValue Cons((PrimType Int))((IntLit 3)(ADTValue Cons((PrimType Int))((IntLit 4)(ADTValue Nil()())))))))))(ADTValue Cons((ADT List((PrimType Int))))((ADTValue Cons((PrimType Int))((IntLit 5)(ADTValue Cons((PrimType Int))((IntLit 6)(ADTValue Nil()())))))(ADTValue Nil()())))))],
  [ll1 -> (ADTValue Cons((ADT List((PrimType Int))))((ADTValue Cons((PrimType Int))((IntLit 5)(ADTValue Cons((PrimType Int))((IntLit 6)(ADTValue Nil()())))))(ADTValue Nil()())))],
  [l6 -> (ADTValue Cons((PrimType Int))((IntLit 5)(ADTValue Cons((PrimType Int))((IntLit 6)(ADTValue Nil()())))))],
  [l5 -> (ADTValue Cons((PrimType Int))((IntLit 6)(ADTValue Nil()())))],
  [six -> (IntLit 6)],
  [five -> (IntLit 5)],
  [l4 -> (ADTValue Cons((PrimType Int))((IntLit 1)(ADTValue Cons((PrimType Int))((IntLit 2)(ADTValue Cons((PrimType Int))((IntLit 3)(ADTValue Cons((PrimType Int))((IntLit 4)(ADTValue Nil()())))))))))],
  [l3 -> (ADTValue Cons((PrimType Int))((IntLit 2)(ADTValue Cons((PrimType Int))((IntLit 3)(ADTValue Cons((PrimType Int))((IntLit 4)(ADTValue Nil()())))))))],
  [l2 -> (ADTValue Cons((PrimType Int))((IntLit 3)(ADTValue Cons((PrimType Int))((IntLit 4)(ADTValue Nil()())))))],
  [l1 -> (ADTValue Cons((PrimType Int))((IntLit 4)(ADTValue Nil()())))],
  [nil -> (ADTValue Nil()())],
  [four -> (IntLit 4)],
  [three -> (IntLit 3)],
  [two -> (IntLit 2)],
  [one -> (IntLit 1)],
  [int_flatten -> <closure>],
  [list_flatten -> <type_closure>],
  [list_append -> <type_closure>] }
