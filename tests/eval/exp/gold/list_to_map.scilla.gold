(Map((TypeVar 'A)(TypeVar 'B))(((StringLit four)(IntLit 64 4))((StringLit three)(IntLit 64 3))((StringLit two)(IntLit 64 2))((StringLit one)(IntLit 64 1)))),
{ [l4 -> (ADTValue Cons((ADT Pair((ADT String((PrimType Int64))))))((ADTValue Pair((ADT String((PrimType Int64))))((StringLit one)(IntLit 64 1)))(ADTValue Cons((ADT Pair((ADT String((PrimType Int64))))))((ADTValue Pair((ADT String((PrimType Int64))))((StringLit two)(IntLit 64 2)))(ADTValue Cons((ADT Pair((ADT String((PrimType Int64))))))((ADTValue Pair((ADT String((PrimType Int64))))((StringLit three)(IntLit 64 3)))(ADTValue Cons((ADT Pair((ADT String((PrimType Int64))))))((ADTValue Pair((ADT String((PrimType Int64))))((StringLit four)(IntLit 64 4)))(ADTValue Nil()())))))))))],
  [l3 -> (ADTValue Cons((ADT Pair((ADT String((PrimType Int64))))))((ADTValue Pair((ADT String((PrimType Int64))))((StringLit two)(IntLit 64 2)))(ADTValue Cons((ADT Pair((ADT String((PrimType Int64))))))((ADTValue Pair((ADT String((PrimType Int64))))((StringLit three)(IntLit 64 3)))(ADTValue Cons((ADT Pair((ADT String((PrimType Int64))))))((ADTValue Pair((ADT String((PrimType Int64))))((StringLit four)(IntLit 64 4)))(ADTValue Nil()())))))))],
  [l2 -> (ADTValue Cons((ADT Pair((ADT String((PrimType Int64))))))((ADTValue Pair((ADT String((PrimType Int64))))((StringLit three)(IntLit 64 3)))(ADTValue Cons((ADT Pair((ADT String((PrimType Int64))))))((ADTValue Pair((ADT String((PrimType Int64))))((StringLit four)(IntLit 64 4)))(ADTValue Nil()())))))],
  [l1 -> (ADTValue Cons((ADT Pair((ADT String((PrimType Int64))))))((ADTValue Pair((ADT String((PrimType Int64))))((StringLit four)(IntLit 64 4)))(ADTValue Nil()())))],
  [nil -> (ADTValue Nil()())],
  [pair4 -> (ADTValue Pair((ADT String((PrimType Int64))))((StringLit four)(IntLit 64 4)))],
  [pair3 -> (ADTValue Pair((ADT String((PrimType Int64))))((StringLit three)(IntLit 64 3)))],
  [pair2 -> (ADTValue Pair((ADT String((PrimType Int64))))((StringLit two)(IntLit 64 2)))],
  [pair1 -> (ADTValue Pair((ADT String((PrimType Int64))))((StringLit one)(IntLit 64 1)))],
  [fours -> (StringLit four)],
  [threes -> (StringLit three)],
  [twos -> (StringLit two)],
  [ones -> (StringLit one)],
  [four -> (IntLit 64 4)],
  [three -> (IntLit 64 3)],
  [two -> (IntLit 64 2)],
  [one -> (IntLit 64 1)],
  [to_map -> <closure>],
  [list_to_map -> <type_closure>] }
