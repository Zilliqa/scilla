(ADTValue True()()),
{ [r8 -> (ADTValue False()())],
  [r7 -> (ADTValue False()())],
  [r6 -> (ADTValue True()())],
  [r5 -> (ADTValue True()())],
  [r4 -> (ADTValue False()())],
  [r3 -> (ADTValue False()())],
  [r2 -> (ADTValue False()())],
  [r1 -> (ADTValue False()())],
  [f -> <closure>],
  [l4 -> (ADTValue Cons((PrimType Int))((IntLit 1)(ADTValue Cons((PrimType Int))((IntLit 2)(ADTValue Cons((PrimType Int))((IntLit 10)(ADTValue Cons((PrimType Int))((IntLit 11)(ADTValue Nil()())))))))))],
  [l3 -> (ADTValue Cons((PrimType Int))((IntLit 2)(ADTValue Cons((PrimType Int))((IntLit 10)(ADTValue Cons((PrimType Int))((IntLit 11)(ADTValue Nil()())))))))],
  [l2 -> (ADTValue Cons((PrimType Int))((IntLit 10)(ADTValue Cons((PrimType Int))((IntLit 11)(ADTValue Nil()())))))],
  [l1 -> (ADTValue Cons((PrimType Int))((IntLit 11)(ADTValue Nil()())))],
  [nil -> (ADTValue Nil()())],
  [eleven -> (IntLit 11)],
  [ten -> (IntLit 10)],
  [two -> (IntLit 2)],
  [one -> (IntLit 1)],
  [int_eq -> <closure>],
  [list_eq -> <type_closure>],
  [list_eq_helper -> <type_closure>],
  [list_tail -> <type_closure>],
  [list_head -> <type_closure>] }
