let p1x = 0x18b18acfb4c2c30276db5411368e7185b311dd124691610c5d3b74034e093dc9 in
let p1y = 0x063c909c4720840cb5134cb9f59fa749755796819658d32efc0d288198f37266 in
let p2x = 0x07c2b7f58a84bd6145f00c9c2bc0bb1a187f20ff2c92963a88019e7c6a014eed in
let p2y = 0x06614e20c147e940f2d70da3f74c9a17df361706a4485c742bd6788478fa17d7 in

let sum_x = 0x2243525c5efd4b9c3d3c45ac0ca3fe4dd85e830a4ce6b65fa1eeaee202839703 in
let sum_y = 0x301d1d33be6da8e509df21cc35964723180eed7532537db9ae5e7d48f195c915 in

let p1 = Pair {ByStr32 ByStr32} p1x p1y in
let p2 = Pair {ByStr32 ByStr32} p2x p2y in

let sum = builtin alt_bn128_G1_add p1 p2 in
let sum_test =
  match sum with
  | Some (Pair sumx sumy) =>
    let xeq = builtin eq sum_x sumx in
    let yeq = builtin eq sum_y sumy in
    andb xeq yeq
  | _ => False
  end
in

let px = 0x025a6f4181d2b4ea8b724290ffb40156eb0adb514c688556eb79cdea0752c2bb in
let py = 0x2eff3f31dea215f1eb86023a133a996eb6300b44da664d64251d05381bb8a02e in
let s = 0x183227397098d014dc2822db40c0ac2ecbc0b548b438e5469e10460b6c3e7ea3 in

let p = Pair {ByStr32 ByStr32} px py in

let mul_x = 0x14789d0d4a730b354403b5fac948113739e276c23e0258d8596ee72f9cd9d323 in
let mul_y = 0x0af18a63153e0ec25ff9f2951dd3fa90ed0197bfef6e2a1a62b5095b9d2b4a27 in

let mul = builtin alt_bn128_G1_mul p s in
let mul_test =
  match mul with
  | Some (Pair mulx muly) =>
    let xeq = builtin eq mul_x mulx in
    let yeq = builtin eq mul_y muly in
    andb xeq yeq
  | _ => False
  end
in

let succm = "Success" in
let failm = "Fail" in

let succ = andb sum_test mul_test in
match succ with
| True => succm
| False => failm
end
