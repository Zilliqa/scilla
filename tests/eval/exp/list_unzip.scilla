let list_unzip =
  tfun 'A =>
  tfun 'B =>
  fun (l : List Pair 'A 'B) =>
    let folder = @list_foldr (Pair 'A 'B) (Pair (List 'A) (List 'B)) in
    let nil = Nil in
    let init = Pair {(List 'A) (List 'B)} nil nil in
    let iter =
      fun (h : Pair 'A 'B) =>
      fun (z : Pair (List 'A) (List 'B)) =>
        match h with
        | Pair a b =>
          match z with
          | Pair la lb =>
            let nla = Cons {'A} a la in
            let nlb = Cons {'B} b lb in
            Pair {(List 'A)(List 'B)} nla nlb
          end
        end
    in
      folder iter init l
in
    
let int_unzip = @list_unzip Int Int in

let one = 1 in
let two = 2 in
let three = 3 in
let four = 4 in

let nil = Nil in
let n0 = Pair {Int Int} four four in
let n1 = Pair {Int Int} three three in
let n2 = Pair {Int Int} two two in
let n3 = Pair {Int Int} one one in

let l0 = Cons {Pair Int Int} n0 nil in
let l1 = Cons {Pair Int Int} n1 l0 in
let l2 = Cons {Pair Int Int} n2 l1 in
let l3 = Cons {Pair Int Int} n3 l2 in

int_unzip l3
