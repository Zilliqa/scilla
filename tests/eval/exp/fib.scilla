(* Expected output: (IntLit 21) *)

let zero = Zero in 
let one  = Succ zero in
let two  = Succ one in
let three = Succ two in
let four = Succ three in
let five = Succ four in
let six = Succ five in
let seven = Succ six in

let fib = fun (n : Nat) =>
  let iter_fun =
    fun (res : Product Int Int) => fun (n: Nat) =>
      match res with
      | Pair x y => let z = builtin add x y in
      Pair {Int Int} z x
      end
    in
  let zero = Int32 0 in
  let one = Int32 1 in
  let init_val = Pair {Int Int} one zero in
  let typed_folder = @nat_fold (Product Int Int) in
	let	folder = typed_folder iter_fun init_val in		
  let res = folder n in
	match res with
	|	Pair x y => x
	end

in

fib seven

		
