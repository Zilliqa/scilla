let list_forall =
  tfun 'A =>
  fun (f : 'A -> Bool) =>
  fun (l : List 'A) =>
    let folder = @list_foldl 'A Bool in
    let init = True in
    let iter =
      fun (z : Bool) =>
      fun (h : 'A) =>
        let res = f h in
        match res with
        | False =>
          False
        | True =>
          z
        end
    in
      folder iter init l
in

let int_forall = @list_forall Int in
let f =
  fun (a : Int) =>
    let three = 3 in
    builtin lt a three
in
let g =
  fun (a : Int) =>
    let five = 5 in
    builtin lt a five
in

let zero = 0 in
let one = 1 in
let two = 2 in
let three = 3 in
let four = 4 in

let nil = Nil in
let l1 = Cons {Int} four nil in
let l2 = Cons {Int} three l1 in
let l3 = Cons {Int} two l2 in
let l4 = Cons {Int} one l3 in

(* test if all are < 3 (false) *)
let res1 = int_forall f l4 in
(* test if all are < 5 (true) *)
int_forall g l4
