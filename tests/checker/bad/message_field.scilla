scilla_version 0

library Msg_Field_Test

let one_msg = 
  fun (msg : Message) => 
    let nil_msg = Nil {Message} in
    Cons {Message} msg nil_msg

contract Msg_Field_Test ()

(* The type of arguments to fields in Message is incorrect *)
transition malMessage3(num1 : Int32)
  (* duplicate field *)
  msg = { _tag: ""; _recipient : _sender; _amount : num1; status : "foo"};
  msgs = one_msg msg;
  send msgs
end

(* The type of arguments to fields in Message is incorrect *)
transition malMessage4 ()
  (* duplicate field *)
  msg = { _tag: ""; _recipient : _sender; _amount : Zero; status : "foo"};
  msgs = one_msg msg;
  send msgs
end

(* The type of arguments to fields in Message is incorrect *)
transition malMessage5 ()
  (* duplicate field *)
  msg = { _tag: ""; _recipient : 0xabad; _amount : Uint128 0; status : "foo"};
  msgs = one_msg msg;
  send msgs
end

(* The type of arguments to fields in Message is incorrect *)
transition malMessage6 ()
  (* duplicate field *)
  msg = { _tag: BNum 100; _recipient : 0xabad; _amount : Uint128 0; status : "foo"};
  msgs = one_msg msg;
  send msgs
end
