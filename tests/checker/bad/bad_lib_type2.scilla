scilla_version 0

(* The purpose of this test contract is to demonstrate that *)
(* type errors in variable declarations in libraries are *)
(* handled by the type checker. *)

library BadLibType

(* Apply (f : 'A -> 'B) to every element of List 'A *)
(* But type declaration is (f: 'A -> Uint128) *)
let list_map : forall 'A. forall 'B. ('A -> Uint128) -> List 'A -> List Uint128 =
  tfun 'A => tfun 'B =>
  fun (f : 'A -> 'B) => fun (l : List 'A) =>
  let folder = @list_foldr 'A (List 'B) in
  let init = Nil {'B} in
  let iter = fun (h : 'A) => fun (z : List 'B) =>
    let h1 = f h in
    Cons {'B} h1 z  		
	in folder iter init l


(***************************************************)
(*             The contract definition             *)
(***************************************************)
contract BadLibType

(*  Parameters *)
()
