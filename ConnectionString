Unsafe.Coerce unsafeCoerce :: a -> b
GHC.Exts unsafeCoerce# :: () => a -> b
GHC.Prim unsafeCoerce# :: a -> b
Rebase.Prelude unsafeCoerce :: () => a -> b
System.Unsafe coerce :: a -> b
Data.Singletons.Bool eqCast :: (a == b) ~ 'True => a -> b
GHC.Exts raise# :: () => b -> a
GHC.Prim raise# :: b -> o
GHC.PrimopWrappers raise# :: b -> o
Opaleye.Constant toFields :: Default Constant haskells fields => haskells -> fields
-- plus more results not shown, pass --count=20 to see more
